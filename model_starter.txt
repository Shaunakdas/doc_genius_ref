rails new doc_genius_manager -T --api
# Academic Management
rails generate model Standard name:string slug:string:uniq:uniq sequence:integer
rails g controller Api::V1::Standards
rails g serializer Api::V1::standard
rails generate model Subject name:string slug:string:uniq
rails generate model Stream name:string slug:string:uniq sequence:integer subject:references
rails generate model Chapter name:string slug:string:uniq sequence_stream:integer sequence_standard:integer standard:references stream:references 
rails generate model Topic name:string slug:string:uniq sequence:integer chapter:references
rails generate model SubTopic name:string slug:string:uniq sequence:integer topic:references
rails generate model QuestionType name:string slug:string:uniq sequence:integer image_url:string sub_topic:references


# Game Management
rails generate model RankName slug:string:uniq sequence:integer display_text:string explainer:string 

rails generate model DifficultyLevel name:string slug:string:uniq sequence:integer value:integer
rails generate model Benefit name:string slug:string:uniq explainer:string sequence:integer image_url:string 

rails generate model WorkingRule name:string slug:string:uniq sequence:integer question_text:string difficulty_level:references
# TODO
rails generate model AutoQuestion question_tag:string answer_tag:string question_type:references
# TODO
rails generate model PracticeQuestion name:string slug:string:uniq sequence:integer question_text:string option_text:string auto_question:references difficulty_level:references
# TODO
rails generate model WordQuestion name:string slug:string:uniq  text:string hint:string explaination:string sequence:integer correct_count:integer  difficulty_level:references
# TODO
rails generate model AnswerOption text:string correct:boolean word_question:references

rails generate model GameHolder name:string slug:string:uniq sequence:integer game:references{polymorphic}:index image_url:string  question_type:references

rails generate model GameSession start:datetime finish:datetime game_holder:references user:references

rails g model Role name:string slug:string:uniq

rails generate model User first_name:string last_name:string role:references mobile_number:string verification_code:string is_verified:boolean sex:integer birth:date registration_method:integer

# rails generate model UserPhoneNumber user:references phone_number:string pin:string verified:boolean

rails generate model AcadProfile acad_entity:references{polymorphic}:index user:references

rails generate model SessionScore value:decimal time_taken:time correct_count:integer incorrect_count:integer seen:boolean passed:boolean failed:boolean game_session:references
rails generate model AcadEntityScore average:decimal maximum:decimal last:decimal time_spent:time passed_count:integer failed_count:integer seen_count:integer percentile:decimal acad_entity:references{polymorphic}:index session_score:references

rails generate model Region slug:string:uniq name:string region_type:string parent_region:references
//Remove "foreign_key true"from migration file, t.references :parent_region
//Add to region.rb 
has_many :sub_regions, class_name: 'Region', foreign_key: 'parent_region_id'
belongs_to :parent_region, class_name: 'Region'

rails generate model UserRegion registration_date:date user:references region:references
rails generate model RegionPercentileScore percentile_count:integer score:decimal acad_entity:references{polymorphic}:index region:references
//Index name is way too long. Add to migration file
t.references :acad_entity, polymorphic: true, index: {:name => "index_region_percentile_scores_on_acad_entity"} 





rails generate model Exam name:string sequence:integer exam_date:date slug:string:uniq
rails generate model ExamSet name:string sequence:integer exam_date:date slug:string:uniq exam:references 
rails generate model ExamAttempt name:string exam:references exam_set:references user:references
rails generate model TargetExam name:string 

rails generate model Question text:string bonus:boolean sequence:integer hint_text:string partial:boolean correct_score:integer incorrect_score:integer blank_score:integer per_option_score:integer difficulty_level:references subject:references standard:references chapter:references stream:references topic:references subtopic:references exam:references exam_set:references
rails generate model Answer text:string option_text:string sequence:integer correct:boolean question:references 

rails generate model AttemptAnswer answer:references question:references exam_attempt:references
//Add ScoreName first
rails generate model ScoreName display_text:string min:decimal min_include:boolean max:decimal max_include:boolean
//Change user:references exam:references to -> exam_attempt:references; Add value:decimal, percentage:decimal effective_score:decimal score_name:references; Change Name to UserEntityScore
rails generate model UserEntityScore value:decimal percentage:decimal effective_score:decimal entity:references{polymorphic}:index exam_attempt:references exam_set:references score_name:references correct_count:integer incorrect_count:integer bonus_count:integer partial_count:integer blank_count:integer

rails generate model UserQuestionScore correct:boolean incorrect:boolean blank:boolean partial:boolean value:decimal percentage:decimal effective_score:decimal question:references exam_attempt:references exam_set:references score_name:references
rails db:migrate

rails generate controller api/question
//Change heading of QuestionController to "class Api::QuestionController < ApiController"

//Pending

//:Group , display_text (State, All India, Study Center)
//Per exam attempt, per target exam :Spi
rails generate model Spi value:decimal exam_attempt:references target_exam:references

//Per exam attempt, per entity :Weak entities
rails generate model WeakEntity exam_attempt:references entity:references{polymorphic}:index

//Per exam, per entity, :average score
//Per exam, per entity, :maximum score
//Per exam, per entity, :highest score
rails generate model ExamReferenceScore average:decimal maximum:decimal highest:decimal lowest:decimal exam:references entity:references{polymorphic}:index

//Per exam attempt, per entity, :student score
//Per exam attempt, per entity, :student percentage
//Per exam attempt, per entity, :student percentile
//Per user entity score, :student rank
rails generate model UserGroupReferenceScore percentile:decimal rank:integer entity_score:references group:references{polymorphic}:index entity:references{polymorphic}:index 

//Per exam, per difficulty level, :total question count
rails generate model ExamDifficultyBreakup count:integer exam:references difficulty_level:references

//Per exam attempt, per difficulty level, :correct question count
//Per exam attempt, per difficulty level, :incorrect question count
//Per exam attempt, per difficulty level, :attempted question count
rails generate model UserExamDifficultyBreakup correct:integer incorrect:integer attempted:integer exam_attempt:references difficulty_level:references

//Per exam_attempt, per entity, :effective score (out of 0 and 1)
//:score name

//TODO role model
//TODO User field: activated